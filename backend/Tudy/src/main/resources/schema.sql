-- 최신 엔티티 구조 기반 schema.sql (불필요한 DROP/중복/옛날 테이블 정의 제거)

CREATE TABLE users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) NOT NULL UNIQUE,
    user_id VARCHAR(255) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    birth VARCHAR(255),
    college VARCHAR(255),
    major VARCHAR(255),
    profile_image VARCHAR(255),
    coin_balance INTEGER DEFAULT 0
);

CREATE TABLE friendship (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    from_user_id BIGINT NOT NULL,
    to_user_id BIGINT NOT NULL,
    status VARCHAR(16) CHECK (status IN ('ACCEPTED','PENDING','REJECTED')) NOT NULL,
    created_at TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_friendship_from_user FOREIGN KEY (from_user_id) REFERENCES users(id),
    CONSTRAINT fk_friendship_to_user FOREIGN KEY (to_user_id) REFERENCES users(id)
);

CREATE TABLE categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT,
    name VARCHAR(255) NOT NULL,
    color INTEGER NOT NULL,
    category_type VARCHAR(16) DEFAULT 'ETC',
    CONSTRAINT fk_category_user FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT uq_category_user_name UNIQUE (user_id, name)
);

CREATE TABLE `groups` (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    is_private BOOLEAN,
    password VARCHAR(255),
    owner_id BIGINT,
    CONSTRAINT fk_group_owner FOREIGN KEY (owner_id) REFERENCES users(id)
);

CREATE TABLE group_members (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    group_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    CONSTRAINT fk_group_member_group FOREIGN KEY (group_id) REFERENCES `groups`(id),
    CONSTRAINT fk_group_member_user FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE group_join_requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    group_id BIGINT NOT NULL,
    status VARCHAR(16) CHECK (status IN ('PENDING','APPROVED','REJECTED')) NOT NULL DEFAULT 'PENDING',
    created_at TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP,
    processed_at TIMESTAMP(6),
    CONSTRAINT fk_join_request_user FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT fk_join_request_group FOREIGN KEY (group_id) REFERENCES `groups`(id)
);

CREATE TABLE goals (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    title VARCHAR(255) NOT NULL,
    category_id BIGINT,
    start_date DATE,
    end_date DATE,
    is_group_goal BOOLEAN,
    group_id BIGINT,
    completed BOOLEAN DEFAULT FALSE,
    proof_image VARCHAR(255),
    is_friend_goal BOOLEAN DEFAULT FALSE,
    friend_name VARCHAR(255),
    proof_type VARCHAR(16),
    CONSTRAINT fk_goal_user FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT fk_goal_category FOREIGN KEY (category_id) REFERENCES categories(id),
    CONSTRAINT fk_goal_group FOREIGN KEY (group_id) REFERENCES `groups`(id)
);

CREATE TABLE study_sessions (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    goal_id BIGINT,
    subject VARCHAR(255),
    start_time TIMESTAMP(6) NOT NULL,
    end_time TIMESTAMP(6),
    duration INTEGER,
    CONSTRAINT fk_study_session_user FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT fk_study_session_goal FOREIGN KEY (goal_id) REFERENCES goals(id)
);

-- 필요시 추가 테이블 정의 (ex. diary_entries, photo_submissions, building_items 등) 여기에 작성
